name: SingleExe

on:
  release:
    types: [ published ]
  push:
  pull_request:


jobs:
  build_appimage:
    runs-on: ubuntu-latest
    container:
      image: fedora:41
    steps:
      - uses: actions/checkout@v4
      - name: setenv
        if: github.event_name == 'release'
        run: |
          echo "RELEASE=1" >> $GITHUB_ENV
      - name: bundle SciQLop
        run: |
          dnf update -y && dnf install -y wget file xz rsync gcc git
          sh scripts/appimage/build.sh
      - name: Save packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SciQLop-x86_64.AppImage
          path: dist/SciQLop-x86_64.AppImage

  build_arm64_dmg:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: setenv
        if : github.event_name == 'release'
        run: |
          echo "RELEASE=1" >> $GITHUB_ENV
      - name: bundle SciQLop
        run: |
          brew install graphicsmagick imagemagick dylibbundler
          npm install --global create-dmg
          sh scripts/macos/make_dmg.sh
      - name: Save packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SciQLop-arm64.dmg
          path: dist/SciQLop-*.dmg
      - name: save logs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: logs-macOS-arm64
          path: dist/*.log


  build_x86_64_dmg:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: setenv
        if: github.event_name == 'release'
        run: |
          echo "RELEASE=1" >> $GITHUB_ENV
      - name: bundle SciQLop
        run: |
          brew install graphicsmagick imagemagick dylibbundler coreutils
          npm install --global create-dmg
          sh scripts/macos/make_dmg.sh
      - name: Save packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SciQLop-x86_64.dmg
          path: dist/SciQLop-*.dmg
      - name: save logs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: logs-macOS-x86_64
          path: dist/*.log

  Publish:
    runs-on: ubuntu-latest
    needs: [ build_appimage, build_arm64_dmg, build_x86_64_dmg ]
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: SciQLop*
          path: dist
          merge-multiple: true
      - name: Publish to GitHub Releases
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mv dist/SciQLop-x86_64.AppImage dist/SciQLop-x86_64-${{ github.event.release.tag_name }}.AppImage
          mv dist/SciQLop-arm64.dmg dist/SciQLop-arm64-${{ github.event.release.tag_name }}.dmg
          mv dist/SciQLop-x86_64.dmg dist/SciQLop-x86_64-${{ github.event.release.tag_name }}.dmg
          gh release upload ${{ github.event.release.tag_name }} dist/SciQLop-x86_64-${{ github.event.release.tag_name }}.AppImage
          gh release upload ${{ github.event.release.tag_name }} dist/SciQLop-arm64-${{ github.event.release.tag_name }}.dmg
          gh release upload ${{ github.event.release.tag_name }} dist/SciQLop-x86_64-${{ github.event.release.tag_name }}.dmg